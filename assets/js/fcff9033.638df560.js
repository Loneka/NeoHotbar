"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[195],{7808:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"customization","title":"Customization","description":"Custom buttons","source":"@site/docs/customization.md","sourceDirName":".","slug":"/customization","permalink":"/neohotbar/docs/customization","draft":false,"unlisted":false,"editUrl":"https://github.com/loneka/neohotbar/edit/master/docs/customization.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Getting Started","permalink":"/neohotbar/docs/intro"}}');var i=n(4848),s=n(8453);const a={sidebar_position:2},r="Customization",l={},c=[{value:"Custom buttons",id:"custom-buttons",level:2},{value:"Custom UI",id:"custom-ui",level:2},{value:"Dynamic attributes",id:"dynamic-attributes",level:3},{value:"Properties",id:"properties",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"customization",children:"Customization"})}),"\n",(0,i.jsx)(t.h2,{id:"custom-buttons",children:"Custom buttons"}),"\n",(0,i.jsx)(t.p,{children:"You can add your own custom buttons to NeoHotbar, like to open a backpack for example!"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"First, find an image to use for the button's icon."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Next, let's add the button to NeoHotbar. We'll use the image's asset ID and a callback function to tell NeoHotbar what to do when it's clicked."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"local NeoHotbar = require(path.to.NeoHotbar)\n\nNeoHotbar:AddCustomButton(\"rbxassetid://0\", function()\n    print('Button was clicked!')\nend)\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"You're done! You can hook this button up to whatever you want in your game."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"custom-ui",children:"Custom UI"}),"\n",(0,i.jsx)(t.p,{children:"NeoHotbar's UI is fully overridable, so you can customize it however you like!"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Copy over the default UI to use as a template. The folder can be found in ",(0,i.jsx)(t.code,{children:"NeoHotbar/DefaultInstances"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Modify all you like, you have full control!"}),"\n",(0,i.jsxs)(t.li,{children:["Call ",(0,i.jsxs)(t.a,{href:"/api/NeoHotbar#OverrideGui",children:[":OverrideGui","()"]})," on NeoHotbar, passing your folder as an argument."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"dynamic-attributes",children:"Dynamic attributes"}),"\n",(0,i.jsx)(t.p,{children:"You can also plug into dynamic attributes to have your UI react to changes."}),"\n",(0,i.jsxs)(t.p,{children:["For example, the ",(0,i.jsx)(t.code,{children:"ToolButton"})," component has an attribute called ",(0,i.jsx)(t.code,{children:"Equipped"}),". Here's what a code snippet for that might look like:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:'local ToolButton = path.to.ToolButton\n\nlocal function ReactToEquipped(Equipped: boolean)\n    print(`Equipped: {Equipped}`)\nend\n\nToolButton:GetAttributeChangedSignal("Equipped"):Connect(function()\n    ReactToEquipped(ToolButton:GetAttribute("Equipped"))\nend)\n\nReactToEquipped(ToolButton:GetAttribute("Equipped"))\n'})}),"\n",(0,i.jsxs)(t.p,{children:["You may also choose to use a UI library like ",(0,i.jsx)(t.a,{href:"https://elttob.uk/Fusion/0.2/",children:"Fusion"})," to handle reactive logic. Fun fact, NeoHotbar uses Fusion behind the scenes itself."]}),"\n",(0,i.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(t.p,{children:"You might want to change simpler things, like temporarily hiding the hotbar or locking tool reordering. You can set those properties with the functions listed here:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/api/NeoHotbar#SetEnabled",children:"SetEnabled"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/api/NeoHotbar#SetManagementEnabled",children:"SetManagementEnabled"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/api/NeoHotbar#SetToolTipsEnabled",children:"SetToolTipsEnabled"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/api/NeoHotbar#SetContextMenuEnabled",children:"SetContextMenuEnabled"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var o=n(6540);const i={},s=o.createContext(i);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);